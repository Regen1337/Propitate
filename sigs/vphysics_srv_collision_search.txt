CCollisionQuery::CCollisionQuery(CPhysCollide *)
CCollisionQuery::ConvexCount(void)
CCollisionQuery::GetGameData(int)
CCollisionQuery::GetTriangleMaterialIndex(int,int)
CCollisionQuery::GetTriangleVerts(int,int,Vector *)
CCollisionQuery::SetTriangleMaterialIndex(int,int,int)
CCollisionQuery::SetTriangleVerts(int,int,Vector const*)
CCollisionQuery::Triangle(IVP_Compact_Ledge *,int)
CCollisionQuery::TriangleCount(int)
CCollisionQuery::~CCollisionQuery()
CCollisionQuery::~CCollisionQuery()
CCollisionSolver::check_objects_for_collision_detection(IVP_Real_Object *,IVP_Real_Object *)
CCollisionSolver::environment_will_be_deleted(IVP_Environment *)
CCollisionSolver::inter_penetration(IVP_Mindist *,IVP_Real_Object *,IVP_Real_Object *,double)
CCollisionSolver::max_collision_checks_exceeded(int) // CHECKOUT
CCollisionSolver::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits *,IVP_Core *) // CHECKOUT
CCollisionSolver::max_contacts_exceeded_check_freezing(IVP_Core **,int) // CHECKOUT
CCollisionSolver::max_velocity_exceeded(IVP_Anomaly_Limits *,IVP_Core *,IVP_U_Float_Point *) // CHECKOUT
CCollisionSolver::~CCollisionSolver()
CCollisionSolver::~CCollisionSolver()
CEmptyCollisionListener::EndTouch(IPhysicsObject *,IPhysicsObject *,IPhysicsCollisionData *)
CEmptyCollisionListener::FluidEndTouch(IPhysicsObject *,IPhysicsFluidController *)
CEmptyCollisionListener::FluidStartTouch(IPhysicsObject *,IPhysicsFluidController *)
CEmptyCollisionListener::Friction(IPhysicsObject *,float,int,int,IPhysicsCollisionData *)
CEmptyCollisionListener::ObjectEnterTrigger(IPhysicsObject *,IPhysicsObject *)
CEmptyCollisionListener::ObjectLeaveTrigger(IPhysicsObject *,IPhysicsObject *)
CEmptyCollisionListener::PostCollision(vcollisionevent_t *)
CEmptyCollisionListener::PostSimulationFrame(void)
CEmptyCollisionListener::PreCollision(vcollisionevent_t *)
CEmptyCollisionListener::StartTouch(IPhysicsObject *,IPhysicsObject *,IPhysicsCollisionData *)
CPhysicsCollision::AddBBoxCache(CPhysCollideCompactSurface *,Vector const&,Vector const&)
CPhysicsCollision::BBoxToCollide(Vector const&,Vector const&)
CPhysicsCollision::BBoxToConvex(Vector const&,Vector const&)
CPhysicsCollision::CollideGetAABB(Vector *,Vector *,CPhysCollide const*,Vector const&,QAngle const&)
CPhysicsCollision::CollideGetExtent(CPhysCollide const*,Vector const&,QAngle const&,Vector const&)
CPhysicsCollision::CollideGetMassCenter(CPhysCollide *,Vector *)
CPhysicsCollision::CollideGetOrthographicAreas(CPhysCollide const*)
CPhysicsCollision::CollideIndex(CPhysCollide const*)
CPhysicsCollision::CollideSetMassCenter(CPhysCollide *,Vector const&)
CPhysicsCollision::CollideSetOrthographicAreas(CPhysCollide *,Vector const&)
CPhysicsCollision::CollideSize(CPhysCollide *)
CPhysicsCollision::CollideSurfaceArea(CPhysCollide *)
CPhysicsCollision::CollideVolume(CPhysCollide *)
CPhysicsCollision::CollideWrite(char *,CPhysCollide *,bool)
CPhysicsCollision::ConvertConvexToCollide(CPhysConvex **,int)
CPhysicsCollision::ConvertConvexToCollideParams(CPhysConvex **,int,convertconvexparams_t const&)
CPhysicsCollision::ConvertPolysoupToCollide(CPhysPolysoup *,bool)
CPhysicsCollision::ConvexFree(CPhysConvex *)
CPhysicsCollision::ConvexFromConvexPolyhedron(CPolyhedron const&)
CPhysicsCollision::ConvexFromPlanes(float *,int,float)
CPhysicsCollision::ConvexFromVerts(Vector **,int)
CPhysicsCollision::ConvexFromVertsFast(Vector **,int)
CPhysicsCollision::ConvexSurfaceArea(CPhysConvex *)
CPhysicsCollision::ConvexVolume(CPhysConvex *)
CPhysicsCollision::ConvexesFromConvexPolygon(Vector const&,Vector const*,int,CPhysConvex **)
CPhysicsCollision::CreateDebugMesh(CPhysCollide const*,Vector **)
CPhysicsCollision::CreateQueryModel(CPhysCollide *)
CPhysicsCollision::CreateVirtualMesh(virtualmeshparams_t const&)
CPhysicsCollision::DestroyCollide(CPhysCollide *)
CPhysicsCollision::DestroyDebugMesh(int,Vector *)
CPhysicsCollision::DestroyQueryModel(ICollisionQuery *)
CPhysicsCollision::FastBboxCollide(CPhysCollideCompactSurface const*,Vector const&,Vector const&)
CPhysicsCollision::GetBBoxCache(Vector const&,Vector const&)
CPhysicsCollision::GetBBoxCacheSize(int *,int *)
CPhysicsCollision::GetConvexesUsedInCollideable(CPhysCollide const*,CPhysConvex **,int)
CPhysicsCollision::InitBBoxCache(void)
CPhysicsCollision::IsBBoxCache(CPhysCollide *)
CPhysicsCollision::IsBoxIntersectingCone(Vector const&,Vector const&,truncatedcone_t const&)
CPhysicsCollision::OutputDebugInfo(CPhysCollide const*)
CPhysicsCollision::PolyhedronFromConvex(CPhysConvex *,bool)
CPhysicsCollision::PolysoupAddTriangle(CPhysPolysoup *,Vector const&,Vector const&,Vector const&,int)
CPhysicsCollision::PolysoupCreate(void)
CPhysicsCollision::PolysoupDestroy(CPhysPolysoup *)
CPhysicsCollision::ReadStat(int)
CPhysicsCollision::RebuildConvexFromPlanes(CPhysConvex *,float)
CPhysicsCollision::SetConvexGameData(CPhysConvex *,uint)
CPhysicsCollision::SupportsVirtualMesh(void)
CPhysicsCollision::ThreadContextCreate(void)
CPhysicsCollision::ThreadContextDestroy(IPhysicsCollision *)
CPhysicsCollision::TraceBox(Ray_t const&,CPhysCollide const*,Vector const&,QAngle const&,CGameTrace *)
CPhysicsCollision::TraceBox(Ray_t const&,uint,IConvexInfo *,CPhysCollide const*,Vector const&,QAngle const&,CGameTrace *)
CPhysicsCollision::TraceBox(Vector const&,Vector const&,Vector const&,Vector const&,CPhysCollide const*,Vector const&,QAngle const&,CGameTrace *)
CPhysicsCollision::TraceCollide(Vector const&,Vector const&,CPhysCollide const*,QAngle const&,CPhysCollide const*,Vector const&,QAngle const&,CGameTrace *)
CPhysicsCollision::UnserializeCollide(char *,int,int)
CPhysicsCollision::VCollideLoad(vcollide_t *,int,char const*,int,bool)
CPhysicsCollision::VCollideUnload(vcollide_t *)
CPhysicsCollision::VPhysicsKeyParserCreate(char const*)
CPhysicsCollision::VPhysicsKeyParserDestroy(IVPhysicsKeyParser *)
CPhysicsCollision::~CPhysicsCollision()
CPhysicsCollision::~CPhysicsCollision()
CPhysicsCollisionData::GetContactPoint(Vector &)
CPhysicsCollisionData::GetContactSpeed(Vector &)
CPhysicsCollisionData::GetSurfaceNormal(Vector &)
CPhysicsCollisionSet::DisableCollisions(int,int)
CPhysicsCollisionSet::EnableCollisions(int,int)
CPhysicsCollisionSet::ShouldCollide(int,int)
CPhysicsEnvironment::GetCollisionEventHandler(void)
CPhysicsEnvironment::IsCollisionModelUsed(CPhysCollide *)
CPhysicsEnvironment::SetCollisionEventHandler(IPhysicsCollisionEvent *)
CPhysicsEnvironment::SetCollisionSolver(IPhysicsCollisionSolver *)
CPhysicsInterface::DestroyAllCollisionSets(void)
CPhysicsInterface::FindCollisionSet(uint)
CPhysicsInterface::FindOrCreateCollisionSet(uint,int)
CPhysicsListenerCollision::CPhysicsListenerCollision(void)
CPhysicsListenerCollision::CorePairLessFunc(CPhysicsListenerCollision::corepair_t const&,CPhysicsListenerCollision::corepair_t const&)
CPhysicsListenerCollision::core_entered_volume(IVP_Controller_Phantom *,IVP_Core *)
CPhysicsListenerCollision::core_left_volume(IVP_Controller_Phantom *,IVP_Core *)
CPhysicsListenerCollision::event_collision_object_deleted(IVP_Real_Object *)
CPhysicsListenerCollision::event_friction_created(IVP_Event_Friction *)
CPhysicsListenerCollision::event_friction_deleted(IVP_Event_Friction *)
CPhysicsListenerCollision::event_friction_pair_created(IVP_Friction_Core_Pair *)
CPhysicsListenerCollision::event_friction_pair_deleted(IVP_Friction_Core_Pair *)
CPhysicsListenerCollision::event_post_collision(IVP_Event_Collision *)
CPhysicsListenerCollision::event_pre_collision(IVP_Event_Collision *)
CPhysicsListenerCollision::mindist_entered_volume(IVP_Controller_Phantom *,IVP_Mindist_Base *)
CPhysicsListenerCollision::mindist_left_volume(IVP_Controller_Phantom *,IVP_Mindist_Base *)
CPhysicsListenerCollision::phantom_is_going_to_be_deleted_event(IVP_Controller_Phantom *)
CPhysicsListenerCollision::~CPhysicsListenerCollision()
CPhysicsListenerCollision::~CPhysicsListenerCollision()
CPhysicsObject::EnableCollisions(bool)
CPhysicsObject::IsCollisionEnabled(void)
CPhysicsObject::RecheckCollisionFilter(void)
CPhysics_Airboat::PerformFrictionNotification(float,float,int,IPhysicsCollisionData *)
CUtlMemory<CCollisionSolver::realobjectpair_t,int>::Grow(int)
CUtlMemory<CCollisionSolver::realobjectpair_t,int>::Purge(void)
CUtlMemory<CPhysicsCollisionSet,int>::Grow(int)
CUtlMemory<CPhysicsCollisionSet,int>::Purge(void)
CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t,ushort>,ushort>::Grow(int)
CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t,ushort>,ushort>::Purge(void)
CUtlRBTree<CPhysicsListenerCollision::corepair_t,ushort,bool (*)(CPhysicsListenerCollision::corepair_t const&,CPhysicsListenerCollision::corepair_t const&),CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t,ushort>,ushort>>::Find(CPhysicsListenerCollision::corepair_t const&)
CUtlRBTree<CPhysicsListenerCollision::corepair_t,ushort,bool (*)(CPhysicsListenerCollision::corepair_t const&,CPhysicsListenerCollision::corepair_t const&),CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t,ushort>,ushort>>::Insert(CPhysicsListenerCollision::corepair_t const&)
CUtlRBTree<CPhysicsListenerCollision::corepair_t,ushort,bool (*)(CPhysicsListenerCollision::corepair_t const&,CPhysicsListenerCollision::corepair_t const&),CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t,ushort>,ushort>>::InsertRebalance(ushort)
CUtlRBTree<CPhysicsListenerCollision::corepair_t,ushort,bool (*)(CPhysicsListenerCollision::corepair_t const&,CPhysicsListenerCollision::corepair_t const&),CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t,ushort>,ushort>>::NewNode(void)
CUtlRBTree<CPhysicsListenerCollision::corepair_t,ushort,bool (*)(CPhysicsListenerCollision::corepair_t const&,CPhysicsListenerCollision::corepair_t const&),CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t,ushort>,ushort>>::NextInorder(ushort)
CUtlRBTree<CPhysicsListenerCollision::corepair_t,ushort,bool (*)(CPhysicsListenerCollision::corepair_t const&,CPhysicsListenerCollision::corepair_t const&),CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t,ushort>,ushort>>::Purge(void)
CUtlRBTree<CPhysicsListenerCollision::corepair_t,ushort,bool (*)(CPhysicsListenerCollision::corepair_t const&,CPhysicsListenerCollision::corepair_t const&),CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t,ushort>,ushort>>::RemoveRebalance(ushort)
CUtlRBTree<CPhysicsListenerCollision::corepair_t,ushort,bool (*)(CPhysicsListenerCollision::corepair_t const&,CPhysicsListenerCollision::corepair_t const&),CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t,ushort>,ushort>>::RotateLeft(ushort)
CUtlRBTree<CPhysicsListenerCollision::corepair_t,ushort,bool (*)(CPhysicsListenerCollision::corepair_t const&,CPhysicsListenerCollision::corepair_t const&),CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t,ushort>,ushort>>::RotateRight(ushort)
CUtlRBTree<CPhysicsListenerCollision::corepair_t,ushort,bool (*)(CPhysicsListenerCollision::corepair_t const&,CPhysicsListenerCollision::corepair_t const&),CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t,ushort>,ushort>>::Unlink(ushort)
CUtlVector<CCollisionSolver::realobjectpair_t,CUtlMemory<CCollisionSolver::realobjectpair_t,int>>::InsertBefore(int,CCollisionSolver::realobjectpair_t const&)
CUtlVector<CPhysicsCollisionSet,CUtlMemory<CPhysicsCollisionSet,int>>::InsertBefore(int)
ICollisionQuery::~ICollisionQuery()
ICollisionQuery::~ICollisionQuery()
IPhysicsCollision::~IPhysicsCollision()
IPhysicsCollision::~IPhysicsCollision()
IPhysicsCollisionEvent::ObjectEnterTrigger(IPhysicsObject *,IPhysicsObject *)
IPhysicsCollisionEvent::ObjectLeaveTrigger(IPhysicsObject *,IPhysicsObject *)
IVP_Anomaly_Limits::get_max_collision_checks_per_psi(void) // CHECKOUT
IVP_Anomaly_Limits::get_max_collisions_per_psi(void) // CHECKOUT
IVP_Anomaly_Manager::max_collision_checks_exceeded(int) // CHECKOUT
IVP_Anomaly_Manager::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits *,IVP_Core *)
IVP_Cluster_Manager::add_listener_collision(IVP_Real_Object *,IVP_Listener_Collision *)
IVP_Cluster_Manager::fire_event_collision_object_deleted(IVP_Real_Object *)
IVP_Cluster_Manager::fire_event_post_collision(IVP_Real_Object *,IVP_Event_Collision *)
IVP_Cluster_Manager::fire_event_pre_collision(IVP_Real_Object *,IVP_Event_Collision *)
IVP_Cluster_Manager::remove_listener_collision(IVP_Real_Object *,IVP_Listener_Collision *)
IVP_Collision::IVP_Collision(IVP_Collision_Delegator *)
IVP_Collision::delegator_is_going_to_be_deleted_event(IVP_Collision_Delegator *)
IVP_Collision::get_fvector_index(int)
IVP_Collision::set_fvector_index(int,int)
IVP_Collision::~IVP_Collision()
IVP_Collision::~IVP_Collision()
IVP_Collision_Callback_Table::~IVP_Collision_Callback_Table()
IVP_Collision_Callback_Table_Hash::compare(void *,void *)
IVP_Collision_Callback_Table_Hash::object_to_index(IVP_Real_Object *)
IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
IVP_Collision_Delegator::change_spawned_mindist_count(int)
IVP_Collision_Delegator::get_spawned_mindist_count(void)
IVP_Collision_Delegator::~IVP_Collision_Delegator()
IVP_Collision_Delegator::~IVP_Collision_Delegator()
IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
IVP_Collision_Delegator_Root_Mindist::IVP_Collision_Delegator_Root_Mindist(void)
IVP_Collision_Delegator_Root_Mindist::collision_is_going_to_be_deleted_event(IVP_Collision *)
IVP_Collision_Delegator_Root_Mindist::delegate_collisions_for_object(IVP_Real_Object *,IVP_Real_Object *)
IVP_Collision_Delegator_Root_Mindist::environment_is_going_to_be_deleted_event(IVP_Environment *)
IVP_Collision_Delegator_Root_Mindist::object_is_removed_from_collision_detection(IVP_Real_Object *)
IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
IVP_Collision_Filter::~IVP_Collision_Filter()
IVP_Collision_Filter::~IVP_Collision_Filter()
IVP_Collision_Filter_Exclusive_Pair::IVP_Collision_Filter_Exclusive_Pair(void)
IVP_Collision_Filter_Exclusive_Pair::check_objects_for_collision_detection(IVP_Real_Object *,IVP_Real_Object *)
IVP_Collision_Filter_Exclusive_Pair::disable_collision_between_objects(IVP_Real_Object *,IVP_Real_Object *)
IVP_Collision_Filter_Exclusive_Pair::enable_collision_between_objects(IVP_Real_Object *,IVP_Real_Object *)
IVP_Collision_Filter_Exclusive_Pair::environment_will_be_deleted(IVP_Environment *)
IVP_Collision_Filter_Exclusive_Pair::generate_hash_entry(IVP_Real_Object *,IVP_Real_Object *,IVP_CFEP_Objectpair *)
IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
IVP_Core::create_collision_merged_core_with(IVP_Core*)
IVP_Core::stop_movement_without_collision_recheck(void)
IVP_Core_Collision::IVP_Core_Collision(IVP_Core *,IVP_Core *)
IVP_Core_Collision::split_collision_merged_core_next_PSI(void)
IVP_Environment::add_listener_collision_global(IVP_Listener_Collision *)
IVP_Environment::add_listener_collision_private(IVP_Real_Object *,IVP_Listener_Collision *)
IVP_Environment::fire_event_post_collision(IVP_Event_Collision *)
IVP_Environment::fire_event_pre_collision(IVP_Event_Collision *)
IVP_Environment::fire_object_is_removed_from_collision_detection(IVP_Real_Object *)
IVP_Environment::get_collision_filter(void)
IVP_Environment::get_global_collision_tolerance(void) // CHECKOUT
IVP_Environment::remove_listener_collision_global(IVP_Listener_Collision *)
IVP_Environment::remove_listener_collision_private(IVP_Real_Object *,IVP_Listener_Collision *)
IVP_Environment::set_global_collision_tolerance(double,double) // CHECKOUT
IVP_Listener_Collision::IVP_Listener_Collision(int)
IVP_Listener_Collision::event_collision_object_deleted(IVP_Real_Object *)
IVP_Listener_Collision::event_friction_created(IVP_Event_Friction *)
IVP_Listener_Collision::event_friction_deleted(IVP_Event_Friction *)
IVP_Listener_Collision::event_friction_pair_created(IVP_Friction_Core_Pair *)
IVP_Listener_Collision::event_friction_pair_deleted(IVP_Friction_Core_Pair *)
IVP_Listener_Collision::event_post_collision(IVP_Event_Collision *)
IVP_Listener_Collision::event_pre_collision(IVP_Event_Collision *)
IVP_Listener_Collision::get_enabled_callbacks(void)
IVP_Listener_Collision::~IVP_Listener_Collision()
IVP_Listener_Collision::~IVP_Listener_Collision()
IVP_Meta_Collision_Filter::IVP_Meta_Collision_Filter(IVP_BOOL)
IVP_Meta_Collision_Filter::add_collision_filter(IVP_Collision_Filter *)
IVP_Meta_Collision_Filter::check_objects_for_collision_detection(IVP_Real_Object *,IVP_Real_Object *)
IVP_Meta_Collision_Filter::environment_will_be_deleted(IVP_Environment *)
IVP_Meta_Collision_Filter::remove_collision_filter(IVP_Collision_Filter *)
IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
IVP_Mindist::IVP_Mindist(IVP_Environment *,IVP_Collision_Delegator *)
IVP_Mindist_Base::IVP_Mindist_Base(IVP_Collision_Delegator *)
IVP_Mindist_Manager::create_exact_mindists(IVP_Real_Object *,IVP_Real_Object *,double,IVP_U_FVector<IVP_Collision> *,IVP_Compact_Ledge const*,IVP_Compact_Ledge const*,IVP_Compact_Ledge const*,IVP_Compact_Ledge const*,IVP_Collision_Delegator *)
IVP_Mindist_Manager::enable_collision_detection_for_object(IVP_Real_Object *)
IVP_Mindist_Recursive::IVP_Mindist_Recursive(IVP_Environment *,IVP_Collision_Delegator *)
IVP_Mindist_Recursive::collision_is_going_to_be_deleted_event(IVP_Collision *)
IVP_Mindist_Settings::set_collision_tolerance(double,double)
IVP_OO_Watcher::IVP_OO_Watcher(IVP_Collision_Delegator *,IVP_Real_Object *,IVP_Real_Object *)
IVP_OO_Watcher::collision_is_going_to_be_deleted_event(IVP_Collision *)
IVP_OV_Element::add_oo_collision(IVP_Collision *)
IVP_OV_Element::remove_oo_collision(IVP_Collision *)
IVP_OV_Tree_Manager::collect_collision_partners(IVP_OV_Element const*,IVP_OV_Node const*,IVP_OV_Node const*)
IVP_OV_Tree_Manager::collect_subbox_collision_partners(IVP_OV_Element const*,IVP_OV_Node const*)
IVP_Real_Object::add_listener_collision(IVP_Listener_Collision *)
IVP_Real_Object::enable_collision_detection(IVP_BOOL)
IVP_Real_Object::get_collision_check_reference_count(void)
IVP_Real_Object::is_collision_detection_enabled(void)
IVP_Real_Object::recheck_collision_filter(void)
IVP_Real_Object::remove_listener_collision(IVP_Listener_Collision *)
IVP_U_FVector<IVP_Collision>::~IVP_U_FVector()
IVP_U_Vector<IVP_Collision_Delegator_Root>::clear(void)
IVP_U_Vector<IVP_Listener_Collision>::~IVP_U_Vector()
_GLOBAL__sub_I_g_PhysicsCollision
__CreateCPhysicsCollisionIPhysicsCollision_interface(void)
`non-virtual thunk to'CCollisionSolver::environment_will_be_deleted(IVP_Environment *)
`non-virtual thunk to'CCollisionSolver::inter_penetration(IVP_Mindist *,IVP_Real_Object *,IVP_Real_Object *,double)
`non-virtual thunk to'CCollisionSolver::max_collision_checks_exceeded(int)
`non-virtual thunk to'CCollisionSolver::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits *,IVP_Core *)
`non-virtual thunk to'CCollisionSolver::max_contacts_exceeded_check_freezing(IVP_Core **,int)
`non-virtual thunk to'CCollisionSolver::max_velocity_exceeded(IVP_Anomaly_Limits *,IVP_Core *,IVP_U_Float_Point *)
`non-virtual thunk to'CCollisionSolver::~CCollisionSolver()
`non-virtual thunk to'CCollisionSolver::~CCollisionSolver()
`non-virtual thunk to'CPhysicsListenerCollision::core_entered_volume(IVP_Controller_Phantom *,IVP_Core *)
`non-virtual thunk to'CPhysicsListenerCollision::core_left_volume(IVP_Controller_Phantom *,IVP_Core *)
`non-virtual thunk to'CPhysicsListenerCollision::mindist_entered_volume(IVP_Controller_Phantom *,IVP_Mindist_Base *)
`non-virtual thunk to'CPhysicsListenerCollision::mindist_left_volume(IVP_Controller_Phantom *,IVP_Mindist_Base *)
`non-virtual thunk to'CPhysicsListenerCollision::phantom_is_going_to_be_deleted_event(IVP_Controller_Phantom *)
`non-virtual thunk to'IVP_Mindist_Recursive::collision_is_going_to_be_deleted_event(IVP_Collision *)
`non-virtual thunk to'IVP_OO_Watcher::collision_is_going_to_be_deleted_event(IVP_Collision *)